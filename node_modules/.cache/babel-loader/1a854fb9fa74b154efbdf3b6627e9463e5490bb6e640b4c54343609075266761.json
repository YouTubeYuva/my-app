{"ast":null,"code":"var _jsxFileName = \"/home/yuvaraj/my-app/src/components/Button.jsx\";\n// import React from 'react';\n// import './button.css';\n\n// function Button(props) {\n//   const { size } = props;\n\n//   const buttonClass = size === 'medium' ? 'medium' : size === 'low' ? 'low' : 'high';\n\n//   return (\n//     <button type=\"button\" className={buttonClass} size = {size}>Hi!</button>\n//   );\n// }\n\n// export default Button;\n\nimport React from 'react';\nimport './button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button(props) {\n  const {\n    name,\n    size\n  } = props;\n\n  // Create a mapping object for button sizes\n  const sizeClassMap = {\n    medium: 'medium',\n    low: 'low',\n    high: 'high' // This can be the default\n  };\n\n  // Use the size prop to get the class, default to 'high' if not found\n  const buttonClass = sizeClassMap[size] || sizeClassMap.high;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: buttonClass,\n    children: [\"Hi! \", name, \", size: \", size]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Button","props","name","size","sizeClassMap","medium","low","high","buttonClass","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yuvaraj/my-app/src/components/Button.jsx"],"sourcesContent":["// import React from 'react';\n// import './button.css';\n\n// function Button(props) {\n//   const { size } = props;\n  \n//   const buttonClass = size === 'medium' ? 'medium' : size === 'low' ? 'low' : 'high';\n\n//   return (\n//     <button type=\"button\" className={buttonClass} size = {size}>Hi!</button>\n//   );\n// }\n\n// export default Button;\n\nimport React from 'react';\nimport './button.css';\n\nfunction Button(props) {\n  const { name, size } = props;\n\n  // Create a mapping object for button sizes\n  const sizeClassMap = {\n    medium: 'medium',\n    low: 'low',\n    high: 'high' // This can be the default\n  };\n\n  // Use the size prop to get the class, default to 'high' if not found\n  const buttonClass = sizeClassMap[size] || sizeClassMap.high;\n\n  return (\n    <button type=\"button\" className={buttonClass}>\n      Hi! {name}, size: {size}\n    </button>\n  );\n}\n\nexport default Button;\n\n\n"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAACC,KAAK,EAAE;EACrB,MAAM;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGF,KAAK;;EAE5B;EACA,MAAMG,YAAY,GAAG;IACnBC,MAAM,EAAE,QAAQ;IAChBC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,MAAM,CAAC;EACf,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGJ,YAAY,CAACD,IAAI,CAAC,IAAIC,YAAY,CAACG,IAAI;EAE3D,oBACER,OAAA;IAAQU,IAAI,EAAC,QAAQ;IAACC,SAAS,EAAEF,WAAY;IAAAG,QAAA,GAAC,MACxC,EAACT,IAAI,EAAC,UAAQ,EAACC,IAAI;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEb;AAACC,EAAA,GAlBQhB,MAAM;AAoBf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}